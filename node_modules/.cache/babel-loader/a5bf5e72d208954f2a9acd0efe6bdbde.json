{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacrawford/Desktop/my-app/src/Quotes.js\";\nimport React from 'react';\nimport Counter from './Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quotes() {\n  // The initial state quoteAuthor being set to an Object of quotes from Authors with Key/Value pairs\n  const quoteAuthor = {\n    JoshuaCrawford: \"Hello, thank you for visiting my random quote generator. Click the 'New-Quote' button to start!\",\n    LaoTzu: \"The journey of a thousand miles begins with one step.\",\n    FriedrichNietzsche: \"That which does not kill us makes us stronger.\",\n    JohnLennon: \"Life is what happens when you’re busy making other plans.\",\n    JoeKennedy: \"When the going gets tough, the tough get going.\",\n    MahatmaGandhi: \"You must be the change you wish to see in the world.\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"// Iterating through quoteAuthor for Author\", Object.keys(quoteAuthor).filter((key, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        author: key,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"new-quote\",\n          children: [author, \": \", quoteAuthor[author]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this);\n    }), \"; // Iterating through quoteAuthor for Quote\", Object.keys(quoteAuthor).filter((val, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        quote: val,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: \"new-quote\",\n          children: [quote, \": \", quoteAuthor[quote]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Quotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","Counter","Quotes","quoteAuthor","JoshuaCrawford","LaoTzu","FriedrichNietzsche","JohnLennon","JoeKennedy","MahatmaGandhi","Object","keys","filter","key","index","author","val","quote"],"sources":["/Users/joshuacrawford/Desktop/my-app/src/Quotes.js"],"sourcesContent":["import React from 'react';\nimport Counter from './Counter';\n\nexport default function Quotes() {\n    // The initial state quoteAuthor being set to an Object of quotes from Authors with Key/Value pairs\n    const quoteAuthor = {\n        JoshuaCrawford: \"Hello, thank you for visiting my random quote generator. Click the 'New-Quote' button to start!\",\n        LaoTzu: \"The journey of a thousand miles begins with one step.\",\n        FriedrichNietzsche: \"That which does not kill us makes us stronger.\",\n        JohnLennon: \"Life is what happens when you’re busy making other plans.\",\n        JoeKennedy: \"When the going gets tough, the tough get going.\",\n        MahatmaGandhi: \"You must be the change you wish to see in the world.\"\n    }\n\n    return (\n        <div>\n        // Iterating through quoteAuthor for Author\n            {Object.keys(quoteAuthor).filter((key, index) => {\n                return (\n                    <div author={key}>\n                        <h3 id=\"new-quote\">\n                            {author}: {quoteAuthor[author]}\n                        </h3>\n                    </div>\n                );\n            })};\n        // Iterating through quoteAuthor for Quote\n            {Object.keys(quoteAuthor).filter((val, index) => {\n                return (\n                    <div quote={val}>\n                        <h3 id=\"new-quote\">\n                            {quote}: {quoteAuthor[quote]}\n                        </h3>\n                    </div>\n                );\n            })};\n        </div>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAC7B;EACA,MAAMC,WAAW,GAAG;IAChBC,cAAc,EAAE,iGADA;IAEhBC,MAAM,EAAE,uDAFQ;IAGhBC,kBAAkB,EAAE,gDAHJ;IAIhBC,UAAU,EAAE,2DAJI;IAKhBC,UAAU,EAAE,iDALI;IAMhBC,aAAa,EAAE;EANC,CAApB;EASA,oBACI;IAAA,0DAEKC,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,MAAzB,CAAgC,CAACC,GAAD,EAAMC,KAAN,KAAgB;MAC7C,oBACI;QAAK,MAAM,EAAED,GAAb;QAAA,uBACI;UAAI,EAAE,EAAC,WAAP;UAAA,WACKE,MADL,QACeZ,WAAW,CAACY,MAAD,CAD1B;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH,CARA,CAFL,kDAYKL,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,MAAzB,CAAgC,CAACI,GAAD,EAAMF,KAAN,KAAgB;MAC7C,oBACI;QAAK,KAAK,EAAEE,GAAZ;QAAA,uBACI;UAAI,EAAE,EAAC,WAAP;UAAA,WACKC,KADL,QACcd,WAAW,CAACc,KAAD,CADzB;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH,CARA,CAZL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;KAnCuBf,M"},"metadata":{},"sourceType":"module"}