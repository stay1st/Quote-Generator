{"ast":null,"code":"var _jsxFileName = \"/Users/joshuacrawford/Desktop/my-app/src/Quotes.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quotes() {\n  {\n    /*The initial state quoteAuthor being set to an Object of quotes from Authors with Key/Value pairs*/\n  }\n  const quoteAuthor = {\n    JoshuaCrawford: \"Hello, thank you for visiting my random quote generator. Click the 'New-Quote' button to start!\",\n    LaoTzu: \"The journey of a thousand miles begins with one step.\",\n    FriedrichNietzsche: \"That which does not kill us makes us stronger.\",\n    JohnLennon: \"Life is what happens when you’re busy making other plans.\",\n    JoeKennedy: \"When the going gets tough, the tough get going.\",\n    MahatmaGandhi: \"You must be the change you wish to see in the world.\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(quoteAuthor).map((keys, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [key, \": \", quoteAuthor[index]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), Object.keys(quoteAuthor).map((keys, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [key, \": \", quoteAuthor[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this);\n    }), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Quotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","Quotes","quoteAuthor","JoshuaCrawford","LaoTzu","FriedrichNietzsche","JohnLennon","JoeKennedy","MahatmaGandhi","Object","keys","map","index","key"],"sources":["/Users/joshuacrawford/Desktop/my-app/src/Quotes.js"],"sourcesContent":["import React from 'react';\n\nexport default function Quotes() {\n    {/*The initial state quoteAuthor being set to an Object of quotes from Authors with Key/Value pairs*/}\n    const quoteAuthor = {\n        JoshuaCrawford: \"Hello, thank you for visiting my random quote generator. Click the 'New-Quote' button to start!\",\n        LaoTzu: \"The journey of a thousand miles begins with one step.\",\n        FriedrichNietzsche: \"That which does not kill us makes us stronger.\",\n        JohnLennon: \"Life is what happens when you’re busy making other plans.\",\n        JoeKennedy: \"When the going gets tough, the tough get going.\",\n        MahatmaGandhi: \"You must be the change you wish to see in the world.\"\n    }\n    return (\n        <div>\n        {/* Iterating through quoteAuthor for Author*/}\n            <div>{Object.keys(quoteAuthor).map((keys, index) => {\n                return (\n                    <div key={index}>\n                        <h3>\n                            {key}: {quoteAuthor[index]}\n                        </h3>\n                    </div>\n                );\n            })}</div>\n        {/* Iterating through quoteAuthor for Quote*/}\n            <div></div>{Object.keys(quoteAuthor).map((keys, index) => {\n                return (\n                    <div key={index}>\n                        <h3>\n                            {key}: {quoteAuthor[index]}\n                        </h3>\n                    </div>\n                );\n            })};\n        </div>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,MAAT,GAAkB;EAC7B;IAAC;EAAqG;EACtG,MAAMC,WAAW,GAAG;IAChBC,cAAc,EAAE,iGADA;IAEhBC,MAAM,EAAE,uDAFQ;IAGhBC,kBAAkB,EAAE,gDAHJ;IAIhBC,UAAU,EAAE,2DAJI;IAKhBC,UAAU,EAAE,iDALI;IAMhBC,aAAa,EAAE;EANC,CAApB;EAQA,oBACI;IAAA,wBAEI;MAAA,UAAMC,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,GAAzB,CAA6B,CAACD,IAAD,EAAOE,KAAP,KAAiB;QAChD,oBACI;UAAA,uBACI;YAAA,WACKC,GADL,QACYX,WAAW,CAACU,KAAD,CADvB;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ,GAAUA,KAAV;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CARK;IAAN;MAAA;MAAA;MAAA;IAAA,QAFJ,eAYI;MAAA;MAAA;MAAA;IAAA,QAZJ,EAYgBH,MAAM,CAACC,IAAP,CAAYR,WAAZ,EAAyBS,GAAzB,CAA6B,CAACD,IAAD,EAAOE,KAAP,KAAiB;MACtD,oBACI;QAAA,uBACI;UAAA,WACKC,GADL,QACYX,WAAW,CAACU,KAAD,CADvB;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,GAAUA,KAAV;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH,CARW,CAZhB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAwBH;KAlCuBX,M"},"metadata":{},"sourceType":"module"}