{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["/Users/joshuacrawford/Desktop/my-app/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    value: 0,\n  }\n  \n  export const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n      increment: (state) => {\n        \n        state.value += 1\n      },\n      decrement: (state) => {\n        state.value -= 1\n      },\n      incrementByAmount: (state, action) => {\n        state.value += action.payload\n      },\n    },\n  })\n  \n  export const { increment, decrement, incrementByAmount } = counterSlice.actions\n  \n  export default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE;AADU,CAArB;AAIE,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SADgC;EAEtCH,YAFsC;EAGtCI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MAEpBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAJO;IAKRM,SAAS,EAAGD,KAAD,IAAW;MACpBA,KAAK,CAACL,KAAN,IAAe,CAAf;IACD,CAPO;IAQRO,iBAAiB,EAAE,CAACF,KAAD,EAAQG,MAAR,KAAmB;MACpCH,KAAK,CAACL,KAAN,IAAeQ,MAAM,CAACC,OAAtB;IACD;EAVO;AAH4B,CAAD,CAAhC;AAiBP,OAAO,MAAM;EAAEL,SAAF;EAAaE,SAAb;EAAwBC;AAAxB,IAA8CN,YAAY,CAACS,OAAjE;AAEP,eAAeT,YAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}